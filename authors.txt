<h2>Authors and credits</h2>

<h3>Authors</h3>

<p>MPIR has been developed since 2008 by a large number of people. It is
currently maintained by William Hart. The main developers include
William Hart, Brian Gladman and Jason Moxham (until 2012).</p>

<p>The authors of MPIR to date (including code merged from the main GMP
project since MPIR 1.0):</p>

<ul>
<li>Brian Gladman - Windows MSVC port and intel format x86_64 code</li>
<li>Jason Moxham - Very significant and extensive improvements to the assembly code on numerous processors.</li>
<li>William Hart - Build system modifications and intel format x86_64 code, some work on Toom 4 and Toom 7 code, extended GCD version of Möller's fast GCD code</li>
<li>Pierrick Gaudry - AMD 64 assembly support, revised FFT code</li>
<li>Gonzalo Tornaria - Patches to config.guess, cpuid.c and help with build testing</li>
<li>Jason Worth Martin - Core 2 assembly support, merge of Möller's GCD patches</li>
<li>Michael Abshoff - Build system patches, valgrinding, build testing</li>
<li>Niels Möller - Fast GCD patches, nhgcd2.c, contributions to the schoolbook
                     and divide and conquer division code, jacobi symbols</li>
<li>Burcin Erocal - help with build testing on Pentium-D</li>
<li>Mariah Lennox - improvements to mpirbench and help with build testing on numerous systems, maintenance of a build farm including installing compiler snapshots</li>
<li>Marco Bodrato - mpz implementation of Toom 7, mpn implementation of toom 8.5, contributed to Schoolbook division code many improved number theoretical functions factorial, multi-factorial, primorial, n-choose-k</li>
<li>Marc Glisse - gmpxx.h improvements</li>
<li>Martin Boij - Miscellaneous improvements to nextprime code</li>
<li>Paul Zimmermann - mpz implementation of Toom 4, FFT code, invert.c,
rootrem</li>
<li>William Stein - build testing on certain platforms</li>
<li>Jeff Gilchrist - porting of T. R. Nicely's code to MPIR, build testing on Windows</li>
<li>David Kirkby - Build testing on Sun servers</li>
<li>Case van Horsen - Build testing on MinGW and Cygwin</li>
<li>Anonymous Japanese contributor - assembly code improvements</li>
<li>Marshall Hampton - reported a build issue on recent apple machines</li>
<li>Robert Gerbicz - Fast root detection, factorial and binomial coefficient computation</li>
<li>David Harvey - Middle product and divide and conquer approximate quotient (see release notes for MPIR 1.3 here for details), some work on basecase division</li>
<li>Paul Zimmermann, Pierrick Gaudry, Alexander Kruppa, Torbjörn Granlund - new FFT code</li>
<li>Peter Shrimpton - BPSW primality test code for integers up to GMP_LIMB_BITS</li>
<li>T.R.Nicely - Primality test code used in the MPIR benchmark program</li>
<li>Minh Van Nguyen - served as release manager for MPIR 2.1.0</li>
<li>Alexander Kruppa - Skylake, Bulldozer, Haswell assembly support and
superoptimisation</li>
<li>Torbjörn Granlund - schoolbook and divide and conquer
division code (reused in asymptotically fast division code), logops, rootrem,
tdiv_q, tdiv_qr, linear division code for x86_64, itanium assembly code, divexact, nextprime, n-choose-k, binvert, mullow_n_basecase, powlo, redc_n, powm, powm_ui improvements</li>
<li>Jens Nurmann - Skylake assembly support</li>
<li>Alex Best - Assembly superoptimiser</li>
<li>Vincent Delecroix - port of mpq_cmp_z from gmp</li>
<li>David Cleaver - Bug report</li>
<li>JP Flori - Many build system patches, tuning values, port of GMP mpz_powm
and mpz_powm_ui to MPIR</li>
<li>Sisyphus (Rob) - Tuning values</li>
<li>Leif Lionhardy - Build system patches, tuning values</li>
<li>Julien Puydt - Tuning values</li>
<li>sav-ix (Alexander) - patch for t-locale on Windows</li>
<li>Isuru Fernando - Tuning values</li>
<li>Alex Dyachenko - mpir.net for interface to .net languages</li>
<li>Tommy Hoffman - Supplied a sed patch.</li>
<li>Averkhaturau - Fixed a C++ compilation problem.</li>
<li>Marcell Keller - Fixed a sign conversion bug.</li>
<li>Sergey Taymanov - Fixed some Windows build file issues.</li>
</ul>

<h3>Citing MPIR</h3>

<p>If your research depends on computations done with MPIR,
please consider giving a formal citation.</p>

<ul>
<li>B. Gladman, W. Hart, J. Moxham, et al. MPIR: Multiple Precision
    Integers and Rationals, 2015. version 2.7.0, A fork of the GNU MP
    package (T. Granlund et al.) <tt>http://mpir.org</tt>.
</li>
</ul>

<pre>
@misc{mpir,
    author = {B. Gladman, W. Hart and J. Moxham, et al.},
    title = {{MPIR}: {M}ultiple {P}recision {I}ntegers and {R}ationals},
    year = {2015},
    note = {Version 2.7.0, \url{http://mpir.org}}
}
</pre>

<p>If you depend on a specific algorithm, please also consider
citing the paper where that algorithm is described (if available),
and consider also citing the official GNU MP project separately.</p>

